{"version":3,"sources":["Components/Header/Header.js","Components/Search/Search.js","Components/NameCard/NameCard.js","Components/ResultsContainer/ResultsContainer.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","enlarged","src","Search","onChange","event","target","value","placeholder","NameCard","sugg","href","ResultsContainer","suggestedNames","suggested","map","word","name","require","App","state","handleInputChange","inputText","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAkBeA,EAfA,SAACC,GACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAS,uCACRD,EAAME,SAAN,qCACFC,IAAI,0GACR,oBAAIF,UAAS,qCACPD,EAAME,SAAN,mCADN,uBAEA,oBAAGD,UAAS,qCACND,EAAME,SAAN,mCADN,+CAEI,uBAFJ,mCCEGE,G,MAVA,SAACJ,GACZ,OACI,qBAAKC,UAAU,mBAAf,SACI,uBAAOI,SAAU,SAACC,GAAD,OAAWN,EAAMK,SAASC,EAAMC,OAAOC,QACpDP,UAAU,aACVQ,YAAY,iCCMbC,G,YAVE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACI,mBAAGV,UAAU,YAAYW,KAAI,UAHhB,yEAGgB,OAAoBD,GAAjD,SACI,qBAAKV,UAAU,qBAAf,SACI,mBAAGA,UAAU,WAAb,SAAyBU,UCM1BE,EAVU,SAAC,GAAmB,IACnCC,EADkC,EAAhBC,UACSC,KAAI,SAACC,GAClC,OAAO,cAAC,EAAD,CAAUN,KAAMM,EAAhB,SAAkCA,GAAPA,MAEtC,OACI,qBAAKhB,UAAU,oBAAf,SAAoCa,KCHtCI,EAAOC,EAAQ,IAyBNC,E,4MArBXC,MAAQ,CACJnB,UAAU,EACVa,UAAW,I,EAGfO,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CAAEtB,UAAWqB,IAC3B,EAAKC,SAAS,CAAET,UAAWQ,EAAYL,EAAKK,GAAa,M,4CAG7D,WACI,OACI,gCACI,cAAC,EAAD,CAAQrB,SAAUuB,KAAKJ,MAAMnB,WAC7B,cAAC,EAAD,CAAQG,SAAUoB,KAAKH,oBACvB,cAAC,EAAD,CAAkBP,UAAWU,KAAKJ,MAAMN,mB,GAjBtCW,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.34cff3b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className='head-container'>\r\n            <img className={`head-image \r\n                ${props.enlarged ? `head-image-big` : `head-image-small`}`}\r\n                src='https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png' />\r\n            <h1 className={`head-text\r\n                ${props.enlarged ? `head-text-big` : `head-text-small`}`}> Name It!</h1>\r\n            <p className={`body-text\r\n                ${props.enlarged ? `body-text-big` : `body-text-small`}`}>Generate the perfect name for your\r\n                <br />start-up or project idea.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport \"./Search.css\"\r\n\r\nconst Search = (props) => {\r\n    return (\r\n        <div className='search-container'>\r\n            <input onChange={(event) => props.onChange(event.target.value)}\r\n                className='search-box'\r\n                placeholder='Enter your keywords here' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport './NameCard.css'\r\n\r\nconst nameCheapUrl = 'https://www.namecheap.com/domains/registration/results/?domain=%27%3B'\r\nconst NameCard = ({ sugg }) => {\r\n    return (\r\n        <a className='card-link' href={`${nameCheapUrl}${sugg}`}>\r\n            <div className='namecard-container'>\r\n                <p className='namecard'>{sugg}</p>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default NameCard","import React from 'react'\r\nimport './ResultsContainer.css'\r\nimport NameCard from './../NameCard/NameCard.js'\r\n\r\nconst ResultsContainer = ({ suggested }) => {\r\n    const suggestedNames = suggested.map((word) => {\r\n        return <NameCard sugg={word} key={word}>{word}</NameCard>\r\n    })\r\n    return (\r\n        <div className='results-container'>{suggestedNames}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsContainer","import React from 'react'\r\nimport './App.css'\r\nimport Header from './../Header/Header.js'\r\nimport Search from './../Search/Search.js'\r\nimport ResultsContainer from './../ResultsContainer/ResultsContainer.js'\r\n\r\nconst name = require('@rstacruz/startup-name-generator')\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        enlarged: true,\r\n        suggested: []\r\n    }\r\n\r\n    handleInputChange = (inputText) => {\r\n        this.setState({ enlarged: !inputText })\r\n        this.setState({ suggested: inputText ? name(inputText) : [] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header enlarged={this.state.enlarged} />\r\n                <Search onChange={this.handleInputChange} />\r\n                <ResultsContainer suggested={this.state.suggested} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}